The following text was compressed using the MSZIP compression algorithm and decompressed in memory before displaying it. The original size of the this text is 2,297 bytes, but compressed it is approximately 1,035 bytes. 

Please note that compressing text that is less than 256 bytes may not be optimal and might produce a poor compression ratio, with output that is longer than the original text size being compressed.

CD - Compress-Decompress Utility using MS Compression API 
fearless 2023 - github.com/mrfearless

CD uses the Microsoft Compression API to compress or decompress data using one of the four supported compression algorithms: XPRESS, XPRESS with Huffman encoding, MSZIP or LZMS.

The files compressed by CD using those compression algorithms also store a signature DWORD value as the header at the start of the file. This is so that the appropriate compression algorithm can be used for the decompression.

CD also makes use of the compression API to store bitmap resources as LZMS compressed data. There are two ways in which CD uses that compressed bitmap data: 

1) In the about box, by uncompressing the bitmap data before creating the bitmap in memory. The LZMS compressed bitmap data is stored as static hex bytes in the CD128x128x4.bmp.asm file.

2) Adding LZMS compressed bitmap files (.lzms) as resources which are compiled into CD.exe. These resources are loaded into memory, and then uncompressed before creating the bitmaps in memory.


XPRESS
------
Microsoft Xpress Compression Algorithm (MSXCA), more commonly known as LZXpress, implements the LZ77 algorithm.

XPRESS-HUFFMAN
--------------
The Huffman variant of the Microsoft Xpress Compression Algorithm (MSXCA) uses LZ77style dictionary compression combined with Huffman coding. Designed for fast compression and decompression with a small dictionary size.

MSZIP
-----
MSZIP uses a combination of LZ77 and Huffman coding. It has only minor variations from Phil Katz's 'deflate' method. MSZIP uses only the three basic modes of deflate: stored, fixed Huffman tree, and dynamic Huffman tree.

LZMS
----
LZMS is an LZ77based algorithm achieving a high compression ratio by relying on a large LZ77 dictionary size and Huffman coding in addition to more concise arithmetic coding.
